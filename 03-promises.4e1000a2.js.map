{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYH,EAAKE,cAAc,yBAkDrC,SAASE,EAAcC,EAAUC,GAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACNH,EACHF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAEnDA,EAAM,G,CA1DXN,EAAKc,iBAAiB,UAAUC,IAC/BA,EAAIC,iBACJb,EAAUc,aAAa,WAAY,IAEnC,MACCC,UAAYZ,MAAAa,EAAOC,KAAAC,EAAMC,OAAAC,IACtBR,EAAIS,cAGR,IAAIC,EAAeC,OAAOP,EAAMQ,OAC5BC,EAAgBF,OAAOH,EAAOI,OAC9BE,EAAcH,OAAOL,EAAKM,OAG9B,IAA+BP,EAAME,EAQrC,GAR+BF,EAQEQ,EARIN,EAQWO,IAA7BJ,EAPN,GAAKL,EAAO,GAAKE,EAAS,KACrCxB,EAAAgC,OAAOC,QAAQ,iCACR,GAWT,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAeI,GAAK,EAExC5B,EAAc4B,EAAGP,GAEfQ,MAAKN,GAAS7B,EAAAgC,OAAOI,QAAQP,KAE7BQ,OAAMC,GAAStC,EAAAgC,OAAOC,QAAQK,KAE9BC,SAAQ,KACJT,IAAkBI,GACrB7B,EAAUmC,gBAAgB,WAAW,IAIxCb,GAAgBI,OAnBhB1B,EAAUmC,gBAAgB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst btnSubmit = form.querySelector('button[type=\"submit\"]');\n\nform.addEventListener('submit', evt => {\n\tevt.preventDefault();\n\tbtnSubmit.setAttribute('disabled', '');\n\n\tconst {\n\t\telements: { delay, step, amount },\n\t} = evt.currentTarget;\n\n\n\tlet currentDelay = Number(delay.value);\n\tlet currentAmount = Number(amount.value)\n\tlet currentStep = Number(step.value)\n\n\n\tfunction formValidation(delay, step, amount) {\n\t\tif (delay < 0 || step < 0 || amount < 0) {\n\t\t\tNotify.failure('Negative numbers are invalid.');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (formValidation(currentDelay, currentAmount, currentStep)) {\n\t\tbtnSubmit.removeAttribute('disabled');\n\n\t\treturn;\n\t}\n\n\tfor (let i = 1; i <= currentAmount; i += 1) {\n\n\t\tcreatePromise(i, currentDelay)\n\n\t\t\t.then(value => Notify.success(value))\n\n\t\t\t.catch(error => Notify.failure(error))\n\n\t\t\t.finally(() => {\n\t\t\t\tif (currentAmount === i) {\n\t\t\t\t\tbtnSubmit.removeAttribute('disabled');\n\t\t\t\t}\n\t\t\t});\n\n\t\tcurrentDelay += currentStep;\n\n\t}\n});\n\n\nfunction createPromise(position, delay) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst shouldResolve = Math.random() > 0.3;\n\n\t\tsetTimeout(() => {\n\t\t\tif (shouldResolve) {\n\t\t\t\tresolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t\t\t} else {\n\t\t\t\treject(`❌ Rejected promise ${position} in ${delay}ms`);\n\t\t\t}\n\t\t}, delay);\n\t});\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$btnSubmit","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","setAttribute","elements","delay1","step","step1","amount","amount1","currentTarget","currentDelay","Number","value","currentAmount","currentStep","Notify","failure","i","then","success","catch","error","finally","removeAttribute"],"version":3,"file":"03-promises.4e1000a2.js.map"}